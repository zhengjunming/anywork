<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qg.anywork.dao.OrganizationDao">

    <resultMap type="com.qg.anywork.model.po.Organization" id="organizationResultMap">
        <id property="organizationId" column="organization_id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="teacherName" column="user_name"/>
        <result property="organizationName" column="organization_name"/>
        <result property="description" column="description"/>
        <result property="token" column="token"/>
        <result property="imagePath" column="image_path"/>
    </resultMap>

    <!--目的：为Dao接口方法提供SQL语句-->

    <select id="getByKeyWords" resultMap="organizationResultMap">
        SELECT o.organization_id, o.teacher_id, u.user_name, o.organization_name, o.description, o.token, o.image_path
        FROM organization o,
             user u
        WHERE u.user_id = o.teacher_id
          AND o.organization_name LIKE #{organizationName}
    </select>

    <select id="getByUserId" resultMap="organizationResultMap">
        SELECT o.organization_id, o.teacher_id, u.user_name, o.organization_name, o.description, o.token, o.image_path
        FROM organization o,
             user u
        WHERE o.organization_id IN (SELECT organization_id FROM relation WHERE user_id = #{userId})
          AND u.user_id = o.teacher_id
    </select>

    <select id="getMyOrganization" resultMap="organizationResultMap">
        SELECT o.organization_id, o.teacher_id, u.user_name, o.organization_name, o.description, o.token, o.image_path
        FROM organization o,
             user u
        WHERE o.teacher_id = #{userId}
          AND u.user_id = o.teacher_id
    </select>

    <select id="getById" resultMap="organizationResultMap">
        SELECT o.organization_id, o.teacher_id, u.user_name, o.organization_name, o.description, o.token, o.image_path
        FROM organization o,
             user u
        WHERE u.user_id = o.teacher_id
          AND organization_id = #{organizationId}
    </select>

    <insert id="joinOrganization">
        INSERT ignore INTO relation (organization_id, user_id)
        VALUE (#{organizationId}, #{userId})
    </insert>


    <select id="isJoin" resultType="int">
        SELECT COUNT(*)
        FROM relation
        WHERE organization_id = #{organizationId}
          AND user_id = #{userId}
    </select>


    <delete id="exitOrganization">
        DELETE
        FROM relation
        WHERE organization_id = #{organizationId}
          AND user_id = #{userId}
    </delete>

    <select id="getOrganizationCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM relation
        WHERE organization_id = #{organizationId}
    </select>

    <select id="findByOrganizationName" resultType="com.qg.anywork.model.po.Organization">
        select *
        from organization
        where organization_name = #{organizationName}
    </select>

    <insert id="addOrganization" parameterType="com.qg.anywork.model.po.Organization" useGeneratedKeys="true"
            keyProperty="organization.organizationId">
        INSERT ignore INTO organization (teacher_id, organization_name, token, description, image_path)
        VALUE (#{organization.teacherId},
               #{organization.organizationName},
               #{organization.token},
               #{organization.description},
               #{organization.imagePath})
    </insert>

    <update id="updateOrganization" parameterType="com.qg.anywork.model.po.Organization">
        UPDATE organization
        <set>
            <if test="organization.organizationName != null and organization.organizationName != ''">
                organization_name = #{organization.organizationName},
            </if>
            <if test="organization.description != null and organization.description != ''">
                description = #{organization.description},
            </if>
            <if test="organization.imagePath != null and organization.imagePath != ''">
                image_path = #{organization.imagePath}
            </if>
        </set>
        WHERE organization_id = #{organization.organizationId}
    </update>

    <delete id="deleteOrganization" parameterType="int">
        DELETE
        FROM organization
        WHERE organization_id = #{organizationId}
    </delete>
    <delete id="deleteOrganizationUserRelation">
        DELETE
        from relation
        where organization_id = #{organizationId}
    </delete>

    <select id="getOrganizationPeople" parameterType="int" resultType="com.qg.anywork.model.po.User">
        SELECT u.user_id, u.student_id, u.user_name, u.email, u.phone, u.mark, u.student_id, u.image_path
        FROM user u,
             relation r
        WHERE r.organization_id = #{organizationId}
          AND u.user_id = r.user_id
    </select>
    <select id="findOrganizationById" resultType="com.qg.anywork.model.po.Organization">
        SELECT *
        from organization
        where teacher_id in (SELECT teacher_id from organization where organization_id = #{organizationId})
    </select>
    <select id="findRelationByUserId" resultType="java.lang.Integer">
        select count(*)
        from relation
        where user_id = #{userId}
    </select>
    <select id="findOrganizationByUserId" resultType="java.lang.Integer">
        select organization_id
        from relation
        where user_id = #{userId}
    </select>
    <select id="getMyOrganizationIds" resultType="java.lang.Integer">
        SELECT o.organization_id
        FROM organization o
        WHERE o.teacher_id = #{userId}
    </select>
    <select id="getUserIdsByOrganizationId" resultType="java.lang.Integer">
        SELECT u.user_id
        FROM user u,
             relation r
        WHERE r.organization_id = #{organizationId}
          AND u.user_id = r.user_id
    </select>

</mapper>